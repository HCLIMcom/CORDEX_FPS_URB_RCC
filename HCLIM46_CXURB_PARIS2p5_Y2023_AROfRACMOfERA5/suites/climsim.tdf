<PRE>
suite $ENV{EXP}
   edit USER $ENV{USER}
   edit OWNER $ENV{USER}
   edit EXP $ENV{EXP}
   edit ARGS ""                     # default arguments to a script
   edit ENVT ""                     # default environment to a script
   edit DTG $ENV{DTGBEG}            # use first DTG outside main loops
   edit Env_system $ENV{ENV_SYSTEM} # default
   edit PP ""                       # for progress.log and progressPP.log
   edit ENSMBR -1                   # ensemble member, -1 for deterministic mode
   edit ENSSIZE $ENV{ENSSIZE}
   edit DTGBEG $ENV{DTGBEG}
   edit DTGEND $ENV{DTGEND}
   edit LBCN 0
   limit nlimConvertFA 5            # Max number of simultaneous convertFA tasks


include system.inc

   task InitRun

if ( $ENV{BUILD} eq 'yes' )
  if( $ENV{BUILD_WITH} eq 'cmake' )
   include cmake_build.inc
  else
   include build.inc
  endif
endif

   family MakeCycleInput
      repeat enumerated DTG $ENV{climsim_dtg}
      trigger ( InitRun == complete and  \
if ( $ENV{BUILD} eq 'yes' )
                Build == complete and \
endif
                ( \
                  ( MakeCycleInput:DTG lt ( Archiving:DTG + 30000 )) or \
                  ( ( MakeCycleInput:DTG ge ( Archiving:DTG + 890000 )) and ( MakeCycleInput:DTG lt ( Archiving:DTG + 920000 )) ) \
                ) \
              )

      family Prepare_cycle
         task Prepare_cycle
if ( $ENV{CREATE_CLIMATE} ne 'no' )
  if ( $ENV{ECOCLIMAP_VERSION} ne 'SG' )
         task Prepare_param_bin
            trigger ( Prepare_cycle == complete )
  endif
  if ( $ENV{TOPO_SOURCE} eq 'gmted2010' )
         task Prepare_gmted
            trigger ( Prepare_cycle == complete )
  endif
  if ( $ENV{SOIL_TEXTURE_VERSION} eq 'SOILGRID' )
         task Prepare_soil
            trigger ( Prepare_cycle == complete )
  endif
endif
      endfamily # Prepare_cycle

      family Climate
         complete [ $ENV{CREATE_CLIMATE} eq 'no' ]
         trigger ( Prepare_cycle == complete )

         family PGD
            task Prepare_pgd
         endfamily # PGD

         task Climate
            trigger ( PGD == complete )
         task ExtractBDclim
if( $ENV{HOST_MODEL} eq 'hir' || $ENV{HOST_MODEL} eq 'ifs' || $ENV{HOST_MODEL} eq 'racmo' || $ENV{COMPCENTRE} ne 'ECMWF' )
            complete 1
endif
      endfamily # Climate

if ( $ENV{COMPCENTRE} eq 'ECMWF' and $ENV{HOST_MODEL} eq 'ifs' )
      family Boundaries_from_MARS
            edit MARS_GET_TYPE boundaries
            trigger ( Prepare_cycle == complete )
            task prepare_MARS_stage_bd
            task MARS_stage_bd
               trigger ( prepare_MARS_stage_bd == complete )
            task prepare_MARS_prefetch
               trigger ( MARS_stage_bd == complete and \
  if ( $ENV{CREATE_CLIMATE} eq 'yes' )
                         ../Climate == complete and \
  endif
                         1 )
            task Prefetch_boundaries
            trigger ( prepare_MARS_prefetch == complete )
      endfamily # Boundaries_from_MARS
endif

      family Boundaries
         trigger ( Prepare_cycle == complete and \
if ( $ENV{CREATE_CLIMATE} eq 'yes' )
                   Climate == complete and \
endif
if ( $ENV{COMPCENTRE} eq 'ECMWF' and $ENV{HOST_MODEL} eq 'ifs' )
                   Boundaries_from_MARS == complete and \
endif
                   1 )

         task Boundary_strategy

loop(EEE,-1,-1,1)
         family LBC0
            trigger ( Boundary_strategy == complete )
               edit LBCN 0
  include bdgen.inc
         endfamily # LBC0

         family LBCn
            trigger ( Boundary_strategy == complete )
            repeat integer LBCN 0 $ENV{BDLLMAX} $ENV{BDSTEP}
  loop(N,1,$ENV{NBDMAX},1)
            family LBC@N@
    include bdgen.inc
            endfamily # LBC@N@
  endloop
         endfamily # LBCn
endloop

if( $ENV{HOST_MODEL} eq 'aro' )
         task Addsurf
            trigger ( LBC0/ExtractBD == complete )
endif
         task Prep_ini_surfex
if( $ENV{HOST_MODEL} eq 'aro' )
            trigger ( Addsurf == complete )
else
            trigger ( LBC0/ExtractBD == complete )
endif
      endfamily # Boundaries

      task CollectLogs
         trigger ( Boundaries == complete or \
                   ( Prepare_cycle == aborted or Climate == aborted or \
if ( $ENV{COMPCENTRE} eq 'ECMWF' and $ENV{HOST_MODEL} eq 'ifs' )
                     Boundaries_from_MARS == aborted or \
endif
                     Boundaries == aborted ) )
         edit ENVT 'FROM=MakeCycleInput'
   endfamily # MakeCycleInput

   family Date
      repeat enumerated DTG $ENV{climsim_dtg}
      trigger ( ( MakeCycleInput == complete ) or \
                ( MakeCycleInput:DTG gt Date:DTG ) or \
                ( MakeCycleInput:DTG == Date:DTG ) )

      family StartData
         trigger ( ( ../MakeCycleInput == complete ) or \
                   ( ../MakeCycleInput:DTG gt ../Date:DTG ) or \
                 ( ( ../MakeCycleInput:DTG == ../Date:DTG ) and \
                   ( ../MakeCycleInput/Boundaries/Prep_ini_surfex == complete ) and \
                   ( ../MakeCycleInput/Boundaries/LBC0 == complete ) ) )

         task FirstGuess
         task Aerosolupd
            trigger ( FirstGuess == complete )
      endfamily # Startdata

      family Forecasting
         trigger ( ( StartData == complete ) and \
                    ( ( ../MakeCycleInput == complete ) or \
                      ( ../MakeCycleInput:DTG gt ../Date:DTG ) or \
                    ( ( ../MakeCycleInput:DTG == ../Date:DTG ) and \
                      ( ../MakeCycleInput/Boundaries == complete ) ) ) )

         task Forecast
            meter $ENV{METER_UNIT} -1 $ENV{METER_MAX} $ENV{METER_MAX}
if($ENV{POSTP} eq 'offline' or $ENV{POSTP} eq 'both' )
         task Listen4Postpp
            trigger ( ( Forecast == active ) || ( Forecast == complete ) || ( Forecast == aborted ) )
endif
if( ($ENV{CONVERTFA} eq 'yes' and $ENV{ARCHIVE_FORMAT} =~ /GRIB/ ) or ( $ENV{IO_SERVER} eq 'yes' ) )
  if( $ENV{MULTITASK} =~ /\b(yes|listen)\b/i )
    !! one listener does all, number of nodes set in Env_submit
         task Listen2file
            trigger ( ( Forecast == active ) || ( Forecast == complete ) || ( Forecast == aborted ) )
            edit ECF_TRIES 2
  else
    loop(N,1,$ENV{MAKEGRIB_LISTENERS})
         family Process@N@
            edit ARGS @N@ $ENV{MAKEGRIB_LISTENERS}
            trigger ( ( Forecast == active ) || ( Forecast == complete ) || ( Forecast == aborted ) )
            task Listen2file
               edit ECF_TRIES 2
      if($ENV{POSTP} eq 'offline' or $ENV{POSTP} eq 'both' )
            task Listen4Makegrib_fp
               trigger ( ( Forecast == active ) || ( Forecast == complete ) || ( Forecast == aborted ) )
      endif
         endfamily
    endloop
  endif
endif
      endfamily # Forecasting

      task CollectLogs
         trigger ( Forecasting == aborted or Forecasting == complete )
         edit ENVT 'FROM=Date'
      task LogProgress
         trigger ( Forecasting == complete and CollectLogs == complete )
   endfamily # Date

   family Postprocessing
      repeat enumerated DTG $ENV{climsim_dtgpp}
      trigger ( Date == complete or Date:DTG gt Postprocessing:DTG )

      family PPtasks
         family convertFAtasks
            complete [ $ENV{CONVERTFA} eq 'no' or $ENV{ARCHIVE_FORMAT} ne 'nc' ]
            inlimit nlimConvertFA       # limit number of simultaneous tasks, put heaviest first

            family convertFA_fullpos_vint
               edit ARGS fullpos_vint
               task convertFA
            endfamily
            family convertFA_fullpos_acc
               edit ARGS fullpos_acc
               task convertFA
            endfamily
            family convertFA_fullpos_acc_pp
               edit ARGS fullpos_acc_pp
               task convertFA
            endfamily
            family convertFA_fullpos
               edit ARGS fullpos
               task convertFA
            endfamily
            family convertFA_surfex
               edit ARGS surfex
               task convertFA
            endfamily
            family convertFA_fullpos_gust
               edit ARGS fullpos_gust
               task convertFA
            endfamily
            family convertFA_fullpos_tasminmax
               edit ARGS fullpos_tasminmax
               task convertFA
            endfamily
            family convertFA_surfex_acc_6h
               edit ARGS surfex_acc_6h
               task convertFA
            endfamily
            family convertFA_fullpos_6h
               edit ARGS fullpos_6h
               task convertFA
            endfamily
            family convertFA_surfex_6h
               edit ARGS surfex_6h
               task convertFA
            endfamily
            family convertFA_fullpos_acc_day
               edit ARGS fullpos_acc_day
               task convertFA
            endfamily
            family convertFA_fullpos_acc_day_pp
               edit ARGS fullpos_acc_day_pp
               task convertFA
            endfamily
            family convertFA_surfex_acc_day
               edit ARGS surfex_acc_day
               task convertFA
            endfamily
            family convertFA_surfex_day
               edit ARGS surfex_day
               task convertFA
            endfamily
            family convertFA_fullpos_acc_mon
               edit ARGS fullpos_acc_mon
               task convertFA
            endfamily
            family convertFA_fullpos_acc_mon_pp
               edit ARGS fullpos_acc_mon_pp
               task convertFA
            endfamily
            family convertFA_surfex_acc_mon
               edit ARGS surfex_acc_mon
               task convertFA
            endfamily
            family convertFA_climate
               complete ( ../../../Postprocessing:DTG ne $ENV{DTGBEG} )
               edit ARGS climate
               task convertFA
            endfamily
         endfamily # convertFAtasks
      endfamily # PPtasks

      task CollectLogs
         trigger ( PPtasks == aborted or PPtasks == complete )
         edit ENVT 'FROM=Postprocessing'
   endfamily # Postprocessing

   family Archiving
      repeat enumerated DTG $ENV{climsim_dtgpp}
      trigger ( Postprocessing == complete or Postprocessing:DTG gt Archiving:DTG )

      family Artasks
         task Archive_host1
            complete [ $ENV{COMPCENTRE} ne 'ECMWF' or $ENV{ARCHIVE_ECMWF} eq 'no' ]
         family Disk_cleaning
            trigger ( Archive_host1 == complete)
            task SaniDisk
if( $ENV{HOST1} )
            task SaniDisk_host1
endif
            task Clean_FA
         endfamily # Disk_cleaning
      endfamily # Artasks

      task CollectLogs
         trigger ( Artasks == aborted or Artasks == complete )
         edit ENVT 'FROM=Archiving'
      task Archive_logs
         complete [ $ENV{COMPCENTRE} ne 'ECMWF' or $ENV{ARCHIVE_ECMWF} eq 'no' ]
         trigger ( CollectLogs == complete )
      task LogProgress
         edit PP PP
         trigger ( Artasks == complete and CollectLogs == complete and Archive_logs == complete )
   endfamily # Archiving

   task Wrapup
      trigger ( Archiving == complete )
endsuite
</PRE>
