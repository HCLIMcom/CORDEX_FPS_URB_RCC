#
# SURFEX namelist dictionary
#
# Each namelist are generated by gen_namelist.pl. The rules 
# for this generation are defined in the Makefile.
# 
# To generate all possible namelists run "gmake all"
# in the current directory. Run "gmake clean" to clean.
#
# Note that changes may be done to the namelists in the scripts
#

# General
#
%filetype=(
NAM_IO_OFFLINE=>{
      CSURF_FILETYPE       => "'".$ENV{CSURF_FILETYPE}."'",
      CTIMESERIES_FILETYPE => "'".$ENV{CTIMESERIES_FILETYPE}."'",
   },
);

###########################################################
# PGD                                                     #
###########################################################

# 2 layer ISBA scheme
%isba_2L=(
 NAM_ISBA=>{
  CISBA          => '"2-L",',
  NGROUND_LAYER  => '2,',
 },
);

# 3 layer ISBA scheme
%isba_3L=(
 NAM_ISBA=>{
  CISBA          => '"3-L",',
  NGROUND_LAYER  => '3,',
  NPATCH         => $ENV{NPATCH},
 },
);

# DIF ISBA scheme
%isba_DIF=(
 NAM_ISBA=>{
  CISBA          => '"DIF",',
  NGROUND_LAYER  => '14,',
  NPATCH         => $ENV{NPATCH},
  LMEB           =>'.TRUE.,',
  YSOC_TOP      => '"soc_top",',
  YSOC_SUB      => '"soc_sub",',
  YSOCFILETYPE => '"'.$ENV{SOC_INPUT_FORMAT}.'",',
  XUNIF_RUNOFFB  => '0.2,',
  CPEDO_FUNCTION => '"CO84",',
  CPHOTO         => '"NON",',
  CALBEDO        => '"CM13",',
  CGNDRES        => '"DSL",',
 },
 NAM_SGH_ISBAn=>{
    CRUNOFF  => '"DT92",',
    CRAIN    => '"SGH",',
    CHORT    => '"DEF",',
    LSOC     => '.TRUE.,',
 },
 NAM_SURF_SNOW_CSTS=>{
    LESSOILSNOWFLUX=> '.TRUE.,',
 },
 NAM_MEB_ISBA=>{
  LMEB_PATCH     => '.F., .T., .T.,',
  LMEB_LITTER    =>'.TRUE.,',
  CMEB_GNDRES    => '"DSL",',
 },
);

%isba_pgd=(
 NAM_ISBA=>{
   YCLAY         => 'YCLAY,',
   YCLAYFILETYPE => '"'.$ENV{SAND_CLAY_INPUT_FORMAT}.'",',
   YSAND         => 'YSAND,',
   YSANDFILETYPE => '"'.$ENV{SAND_CLAY_INPUT_FORMAT}.'",',
 },
);

%pgd=(
 NAM_IO_OFFLINE=>{
   CPGDFILE      => 'CPGDFILE,',
   NHALO         => 0,
   LKDTREE       => '.FALSE.',
   LFAGMAP       => '.TRUE.',
 },
 NAM_PGD_GRID=>{
   CGRID         => '"CONF PROJ",',
 },
 NAM_CONF_PROJ=>{
   XLAT0         => $ENV{LAT0},
   XLON0         => $ENV{LON0},
   XRPK          => $ENV{SINLAT0},
   XBETA         => 0.0,
 },
 NAM_CONF_PROJ_GRID=>{
   ILONE         => 'BEZONEX,',
   ILATE         => 'BEZONEY,',
   XLATCEN       => $ENV{LATC},
   XLONCEN       => $ENV{LONC},
   NIMAX         => 'BNIMAX,',
   NJMAX         => 'BNJMAX,',
   XDX           => 'BXDX,', 
   XDY           => 'BXDY,',
   IWIDTH_I_X    => $ENV{IZONE},
   IWIDTH_I_Y    => $ENV{IZONE},
   XTRUNC        => $ENV{TRUNC},
 },
 NAM_COVER=> {
   YCOVER        => 'YCOVER,',
   YCOVERFILETYPE=> '"'.$ENV{ECOCLIMAP_COVER_FORMAT}.'",',
   XRM_TM        => '0.00,',  
 },
 NAM_ZS=>{
   YZS           => 'YTOPO,',
   YZSFILETYPE   => '"'.$ENV{TOPO_INPUT_FORMAT}.'",',
 },
 NAM_SEABATHY=>{
   XUNIF_SEABATHY=>'0.,', 
 },
 NAM_PGD_SCHEMES=>{
    CNATURE => '"ISBA ",',
    CSEA    => '"SEAFLX",',
    CWATER  => '"'."$ENV{SURFEX_LAKES}".'",',
    CTOWN   => '"TEB ",',
 },
 NAM_FLAKEn=>{
    LSEDIMENTS => '.FALSE.',
 },
 NAM_DATA_FLAKE=>{
    YWATER_DEPTH         => '"GlobalLakeDepth"',
    YWATER_DEPTHFILETYPE => '"'.$ENV{FLAKE_GDB_INPUT_FORMAT}.'",',
    YWATER_DEPTH_STATUS  => '"GlobalLakeStatus"',
    YWATER_DEPTH_STATUSFILETYPE => '"'.$ENV{FLAKE_GDB_INPUT_FORMAT}.'",',
 },
 NAM_WRITE_SURF_ATM=>{
   LSPLIT_PATCH=>'.FALSE.',
 },
);
# Tuning of tree height and roughness length in namelist NAM_TREEDRAG:
# XZ0_MIN_LIMIT, XZ0_MAX_LIMIT: limits the vegetation roughness length
# XALLEN_TERM: scales crops: zallen=exp((LAI-XALLEN_TERM)/1.3); default=3.5
# XGRASS_H_DNM: scales grass: z0=0.13*LAI/XGRASS_H_DNM; default=6.0
# Tree height is scaled as H_TREE = H_TREE * XSCALE_H_TREE * LATFACT * FORFRFACT; where
# XSCALE_H_TREE scales the tree height evenly with this factor; default=1.0
# Scaling with latitde (LAT): LATFACT = XFORLAT1 + XFORLAT2*LAT
# Scaling with forest fraction (FRACFOREST): FORFRFACT = XFORFRAC1 + XFORFRAC2*FRACFOREST
%tree_drag=(
 NAM_TREEDRAG=>{
   XZ0_MIN_LIMIT   =>'0.0,',
   XZ0_MAX_LIMIT   =>'1.6,',
   XSCALE_H_TREE   => $ENV{XSCALE_H_TREE},
   XALLEN_TERM     => $ENV{XALLEN_TERM},
   XGRASS_H_DNM    => $ENV{XGRASS_H_DNM},
   XFORLAT1        => '1.0,',
   XFORLAT2        => '0.0,',
   XFORFRAC1       => '1.0,',
   XFORFRAC2       => '0.0,',
   LFAKETREE       => $ENV{LFAKETREE},
 },
);
# ALARO SPECIFICS
%alaro_pgd=(
 NAM_PGD_ARRANGE_COVER=>{
   LTOWN_TO_ROCK=>'.TRUE.',
 },
 NAM_PGD_SCHEMES=>{
    CTOWN   => '"NONE  ",',
 },
);

###########################################################
# PREP                                                    #
###########################################################

%sice_prep=(
 NAM_PREP_SEAFLUX=>{
    CSEAICE_SCHEME      => '"SICE",',
 },
 NAM_SEAICE_SICE=>{
    LICE_MASS_BALANCE   => '.TRUE.,',
    LICE_HAS_SNOW       => '.FALSE.,',
    XOCEAN_HEAT_FLUX    => '2.,',
 },
 NAM_PREP_SEAICE_SICE=>{
    XICE_THICKNESS      => '.75,',
    NUM_LAYERS          => '4,'
 },
);

%isba_prep=(
 NAM_PREP_ISBA=>{
   LISBA_CANOPY  => $ENV{LISBA_CANOPY}.",",
   LEXTRAP_TG    => '.TRUE.,',
   LEXTRAP_WG    => '.TRUE.,',
   LEXTRAP_WGI   => '.TRUE.,',
   LEXTRAP_SN    => '.TRUE.,',
   XRM_WM_ECMWF  => '0.00,',
   LISBA_FRAC_ECMWF => '.FALSE.,',
 },
 NAM_PREP_ISBA_SNOW=>{
   CSNOW        => "'".$ENV{CSNOW}."'",
   NSNOW_LAYER  => '12,',
   LSWEMAX      => '.TRUE.,',
   LSNOW_FRAC_ECMWF => '.FALSE.,',
   XRM_LITTLE_SNOW => '0.00,',
 },
 NAM_DIAG_ISBAn=>{
   LPATCH_BUDGET=>'.TRUE.,',
   LSURF_MISC_DIF=>'.TRUE.,',
 },
 NAM_WRITE_SURF_ATM=>{
   LSPLIT_PATCH=>'.FALSE.',
 },
);

%offline_prep=(
 NAM_IO_OFFLINE=>{
   CPREPFILE            => '"SURFXINI",',
   CPGDFILE             => '"PGD",',
   LFAGMAP              => '.TRUE.',
 },
 NAM_PREP_SURF_ATM=>{
   CFILEPGD      =>'"PGD_host",',
   CFILEPGDTYPE  =>'"FA",',
   CFILE      =>'"INFILE",',
   CFILETYPE  =>'CFILETYPE,',
   NYEAR      =>'NYEAR,',
   NMONTH     =>'NMONTH,',
   NDAY       =>'NDAY,',
   XTIME      =>'XTIME,',
 },
 NAM_PREP_FLAKE=>{
   LCLIM_LAKE   => '.TRUE.,',
 },
);

# AROME SPECIFICS
%alaro_prep=(
 NAM_PREP_SEAFLUX=>{
   LSEA_SBL     => '.FALSE.,',
 },
);

%arome_prep=(
 NAM_PREP_SEAFLUX=>{
   LSEA_SBL     => '.FALSE.,',
 },
 NAM_SURF_CSTS=>{
  XZ0SN        => '0.003',
  XZ0HSN        => '0.0003',
 },
);

###########################################################
# FORECAST                                                #
###########################################################

%sice_forecast=(
 NAM_SEAICE_SICE=>{
    LICE_MASS_BALANCE   => '.TRUE.,',
    LICE_HAS_SNOW       => '.FALSE.,',
    XOCEAN_HEAT_FLUX    => '2.,',
 },
 NAM_PREP_SEAICE_SICE=>{
    XICE_THICKNESS      => '.75,',
    NUM_LAYERS          => '4,'
 },
 NAM_SEAICEn=>{
    LVOLATILE_SIC       => 'LVOLATILE_SIC,',
    XSIC_EFOLDING_TIME  => '1.0,',
 },
 NAM_DIAG_SURFn=>{
   LCOEF             => '.TRUE.,',
   LSURF_VARS        => '.TRUE.,',
 },
);

%isba_forecast=(
 NAM_DIAG_ISBAn=>{
   LPGD     => '.TRUE.,',
   LSURF_MISC_BUDGET=> '.TRUE.,',
   LSURF_MISC_DIF=>'.TRUE.,',
 },
);

%forecast=(
 NAM_IO_OFFLINE=>{
  CFORCING_FILETYPE   => '"'.$ENV{CFORCING_FILETYPE}.'",',
  XTSTEP_SURF         => $ENV{TSTEP}.",",
  XTSTEP_OUTPUT       => '3600.,',
  LRESTART            => '.TRUE.,',
  CPREPFILE           => '"PREP",',
  CPGDFILE            => '"PGD",',
  LFAGMAP             => '.TRUE.',
 },
 NAM_SURF_ATM=>{
   XRIMAX         => $ENV{XRIMAX},
   XRISHIFT       => '0.0,',
   XCD_COEFF1     => $ENV{XCD_COEFF1},
   XCD_COEFF2     => $ENV{XCD_COEFF2},
   XCH_COEFF1     => $ENV{XCH_COEFF1},
   XVMODFAC       => '0.1',
 },
 NAM_DIAG_SURFn=>{
   N2M      =>'2,',
   LSURF_BUDGET      => '.TRUE.,',
   LSURF_BUDGETC     => '.TRUE.,',
   LRESET_BUDGETC    => '.TRUE.,',
   LCOEF             => '.TRUE.,',
   LSURF_VARS        => '.TRUE.,',
 },
 NAM_DIAG_SURF_ATMn=>{
   LT2MMW            => '.TRUE.,',
 },
 NAM_DIAG_ISBAn=>{
   LPATCH_BUDGET  => '.TRUE.,',
   LSURF_MISC_DIF=>'.TRUE.,',
 },
 NAM_SSOn=>{
   CROUGH   => "'".$ENV{CROUGH}."'",
   XFRACZ0  => '15.,',
   XSOROT   => $ENV{GSIZE}.",", 
   XVOROT   => '8.,', 
   XCOROT   => '500.,',
 },
 NAM_SEAFLUXn=>{
  CSEA_FLUX => '"ECUME",',
  LPWG      => '.FALSE.,',
  LPRECIP   => '.FALSE.,',
  LPWEBB    => '.FALSE.,',
  LPERTFLUX   => 'LPERTSURF,',
 },
 NAM_ISBAn=>{
  LCANOPY_DRAG => '.TRUE.,',
  XCDRAG       => '0.01,',
  LPERTSURF    => 'LPERTSURF,',
  XPERT_LOW    => '0.0 ,0.91,0.1,0.1,1.5e-5,0.5e-5',
  XPERT_HIGH   => '0.95,0.99,6.0,6.0,2.5e-5,1.5e-5',
  XCGMAX       => $ENV{XCGMAX},
  XCSMAX       => $ENV{XCSMAX},
  CSNOWRES     => '"RIL",',
 },
 NAM_SURF_CSTS=>{
  XZ0SN         => '0.003,',
  XZ0HSN        => '0.0003,',
 },
 NAM_WRITE_SURF_ATM=>{
   LSPLIT_PATCH=>'.FALSE.,',
 },
);

%alaro_forecast=(
 NAM_DIAG_SURFn=>{
   LCOEF => '.TRUE.,',
   LSURF_VARS => '.TRUE.,',
 },
);

######################################################################################
#     ASSIMILATION SETTINGS                                                          #
######################################################################################
%sice_assim=(
 NAM_SEAICE_SICE=>{
    LICE_MASS_BALANCE   => '.TRUE.,',
    LICE_HAS_SNOW       => '.FALSE.,',
    XOCEAN_HEAT_FLUX    => '2.,',
 },
 NAM_PREP_SEAICE_SICE=>{
    XICE_THICKNESS      => '.75,',
    NUM_LAYERS          => '4,'
 },
 NAM_PREP_SEAFLUX=>{
    LSEA_SBL           => '.FALSE.',
 },
);

%assim_surfex=(
 NAM_NACVEG=>{
   NECHGU      => ''.$ENV{FCINT}.',',
   XRCLIMCA     => '0.,',
   XRCLISST     => '0.05,',
   XSIGH2MO     => '0.10,',
   XSIGT2MO     => '1.0,',
   LOBS2M      => '.TRUE.,',
   LOBSWG      => '.FALSE.,',
 },
 NAM_IO_OFFLINE=>{
   LSET_FORC_ZS         => $ENV{LSET_FORC_ZS},
   LRESTART_2M          => '.TRUE.',
   CFORCING_FILETYPE   => '"'.$ENV{CFORCING_FILETYPE}.'",',
   LRESTART             => '.TRUE.,',
   XTSTEP_SURF          => '3600.,',
   XTSTEP_OUTPUT        => '3600.,',
   LFAGMAP              => '.TRUE.',
 },
 NAM_ASSIM=>{
   LASSIM              => '.TRUE.,',
   CASSIM_SEA          => '"INPUT"',
   CASSIM_WATER        => '"INPUT"',
   CASSIM_TEB          => '"ROADT"',
   LEXTRAP_WATER       => '.TRUE.,',
   LWATERTG2           => '.TRUE.,',
   LAESNM              => 'LAESNM,',
   LEXTRAP_SEA         => '.FALSE.,',
   LEXTRAP_NATURE      => '.FALSE.',
   LREAD_SST_FROM_FILE => '.TRUE.,',
   LECSST              => 'LECSST,',
   LAROME              => 'LAROME,',
   NPRINTLEV           => '1,',
   LRELCLIMSNOW        => '.FALSE.,',
 },
 NAM_DIAG_SURFn=>{
   N2M                 => '2,',
 },
 NAM_DIAG_SURF_ATMn=>{
   LT2MMW              => '.TRUE.,',
 },
 NAM_DIAG_ISBAn=>{
   LPATCH_BUDGET       => '.TRUE.,',
   LPGD                => '.TRUE.,',
   LSURF_MISC_BUDGET   => '.TRUE.,',
 },
 NAM_WRITE_SURF_ATM=>{
   LSPLIT_PATCH=>'.FALSE.',
 },
);

%soda=(
  NAM_OBS=>{
    'CFILE_FORMAT_OBS'=>'"ASCII"',
    'LSWE'=>'.FALSE.,',
    'NOBSTYPE'=>'3',
    'COBS_M(1)'=>'"T2M",',
    'COBS_M(2)'=>'"HU2M",',
    'COBS_M(3)'=>'"SWE",',
    NNCO => $ENV{NNCO},
  },
  NAM_ASSIM=>{
    'CFILE_FORMAT_FG'=> '"'.$ENV{CFILE_FORMAT_FG}.'",',
    'CFILE_FORMAT_LSM'=>'"'.$ENV{CFILE_FORMAT_LSM}.'",',
    'CFILE_FORMAT_CLIM'=>'"'.$ENV{CFILE_FORMAT_CLIM}.'",',
    'CFILE_FORMAT_SST'=>'"'.$ENV{CFILE_FORMAT_SST}.'",',
  },
  # Needed here also for SODA + OI
  NAM_OBS=>{
    'CFILE_FORMAT_OBS'=>'"ASCII"',
    'LSWE'=>'.FALSE.,',
  },
);


%oi_main=(
  NAM_ASSIM=>{
    CASSIM_ISBA         => '"OI",',
  },
  # Needed here also for SODA + OI
  NAM_OBS=>{
    'LSWE'=>'.TRUE.,',
    'NOBSTYPE'=>'3',
    'COBS_M(1)'=>'"T2M",',
    'COBS_M(2)'=>'"HU2M",',
    'COBS_M(3)'=>'"SWE",',
    NNCO => $ENV{NNCO},
  },
);

%ekf_main=(
 NAM_ASSIM=>{
   CASSIM_ISBA         => '"EKF",',
 },
 NAM_DIAG_ISBAn=>{
   LSURF_MISC_BUDGET => '.TRUE.,',
 },
 NAM_IO_VARASSIM=>{
   LPRT         =>  'LPRT',
   LSIM         =>  'LSIM',
   LBEV         =>  'LBEV',
   LBFIXED      =>  'LBFIXED',
 },
 NAM_VAR=>{
   NIVAR        => 'VV,',
   NVAR         => 'NV,',
   CVAR_M       => '"WG2","WG1","TG2","TG1",',
   XSIGMA_M     => '0.15,0.1,2.0,2.0,',
   XTPRT_M      => '0.0001,0.0001,0.00001,0.00001,',
   NNCV         =>  $ENV{NNCV},
   XSCALE_Q     => '0.125,',
 },
 NAM_OBS=>{
    'NOBSTYPE'=>'3',
    'COBS_M(1)'=>'"T2M",',
    'COBS_M(2)'=>'"HU2M",',
    'COBS_M(3)'=>'"SWE",',
    NNCO => $ENV{NNCO},
  },

);
